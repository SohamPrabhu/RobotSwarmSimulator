---
type: "RectangularWorld"
size:  # in meters
  - 10
  - 10
# n_agents: 10
# init_type:
#   type: "RectRandomInit"  # A starting region where agents will spawn at t=0
#   bb:
#     - - 3.4 # X (m) Upper Left Bounding Box Corner
#       - 3.4 # Y
#     - - 4.6 # X (m) Lower Right Bounding Box Corner
#       - 4.6 # Y
#   seed: 2023 # ADD SEED HERE TO ENSURE SAME INITIALIZATION EVERY TIME
spawners:
  - type: "UniformAgentSpawner"
    oneshot: true
    n: 30
    region: [[3, 3], [3, 6], [6, 6], [6, 3]]
    agent:
      type: MazeAgent
      agent_radius: 0.15
agents:
  - type: MazeAgent
    position: [4, 4]
    agent_radius: 0.15
    sensors:
      - type: "BinaryFOVSensor"
        theta: 0.45  # Vision Angle / 2 (Radians)
        degrees: false
        distance: 1.0  # meters. previously 2.55
        show: true
        goal_sensing_range: 1.0
        # use_goal_state: true
        wall_sensing_range: 1.0
        # fn: 0.10  # 0.10
        # fp: 0.05  # 0.05
        bias: 0
        store_history: false
        seed: 10
    controller:
      type: "StaticController"
      output: [0.001, 0]
    # controller: {type: AgentMethodController}
    # controller:
    #   type: BinaryController
    #   a: [0.001, 0.001]
    #   b: [0.001, -0.001]
    angle: 3.9269908169872415480783042290994
  # - type: StaticAgent
  #   # position: [3, 3]
  #   position: [0, 0]
  #   # agent_radius: 0.5
  #   # points: [[-0.1, 0], [0.1, 0], [-0.1, 0.1], [0.1, 0.1]]
  #   points: [[3, 3], [3, 6], [6, 6], [6, 3]]
  #   # angle: PI
padding: 0
collide_walls: false  # Use No Environment Walls for this problem
show_walls: false  # Hide Default Walls,
metadata:
  hash: _hash
stop_at: 1000000 # Upper Simulation Limit (timesteps)
